.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH STDIN 1 "2021-08-24" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
inertiablast \- Steal energy pods to defeat the empire.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBinertiablast\fR [\-\-help] [\-\-version] [\-\-nodemo] [\-\-nosoundeffects]
[\-\-gamma=Value] [\-\-step] [\-\-windowed]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object of the game is to lift the \fBEnergy Pod\fR from the bottom
of a cave and return it safely to space. The \fBPod\fR is very heavy
(compared to the ship) and this makes it tougher than it may seem.
.PP
You must be careful not to run out of fuel, crash into the cave
walls, or let the enemy artillary outposts shoot you down.
.PP
This is a clone of Thrust, the classic Commodore 64 game.
.SH "BACKGOUND STORY"
.IX Header "BACKGOUND STORY"
The rebellion struggled against the might of the empire.
In a stroke of luck, they captured several warships in a
recent battle. The energy pods powering the ships were
destoryed. Securing new energy pods could turn the tide
against the empire.
.PP
You are part of a risky expedition to
steal energy pods. All pod construction sites include
defense systems which you need to avoid or destroy.
The power plant used to construct the pods and power the
defenses is unstable. It can be temporarily disabled with a
laser blast but too many blasts will cause it to go critical
and destroy the entire planet. You will have limited time to
escape.
.PP
The rebellion is counting on your success. Good luck.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fI\-h, \-\-help\fR" 5
.IX Item "-h, --help"
Print a usage message and exit with a non-zero status.
.IP "\fI\-v, \-\-version\fR" 5
.IX Item "-v, --version"
Print version information on standard output, then exit.
.IP "\fI\-d, \-\-nodemo\fR" 5
.IX Item "-d, --nodemo"
Do not run the demo which is otherwise displayed if the game is left
untouched.
.IP "\fI\-e, \-\-nosoundeffects\fR" 5
.IX Item "-e, --nosoundeffects"
If sound is compiled in, be silent anyway.
.IP "\fI\-c, \-\-gamma=Value\fR" 5
.IX Item "-c, --gamma=Value"
Change the brightness of the colors. 1.0 is the default. Higher values
give brighter colors. The value must be positive.
.IP "\fI\-j, \-\-jump\fR" 5
.IX Item "-j, --jump"
Only draw every third frame. This makes the game a lot faster.
.IP "\fI\-w, \-\-windowed\fR" 5
.IX Item "-w, --windowed"
Run in windowed mode.
.SH "CONTROLS"
.IX Header "CONTROLS"
Note that the following keys are the default configuration. This can be
changed by the user by creating a file named .thrustrc in the users home
directory.
.IP "\fIA\fR" 5
.IX Item "A"
Turn counterclockwise
.IP "\fIS\fR" 5
.IX Item "S"
Turn clockwise
.IP "\fIEnter\fR" 5
.IX Item "Enter"
Fire
.Sp
Shoots a bullet. Different targets have different effect:
.Sp
The \fBFuel Tank\fR explodes for 150 points.
.Sp
The \fBDefense Systems\fR expolde for 750 points.
.Sp
The \fBNuclear Power Plant\fR can take a number of hits. When they are
destroyed you are given a short period of time to clear out before
the whole neighbourhood is nuked. If a \fBPower Plant\fR is hit \- but
not destoyed \- it will recover after a period of time. During this
recovery period, the \fBDefense Systems\fR are not able to fire. 2000 extra
points are scored if the \fBPower Plant\fR is destroyed when the level
is finished. There is exactly one \fBPower Plant\fR in every level.
.Sp
In the more advanced levels you will find other things to shoot at.
.IP "\fIRight-Ctrl\fR" 5
.IX Item "Right-Ctrl"
Thrust
.Sp
Gives the ship a forward push at the cost of some fuel.
.IP "\fISpacebar\fR" 5
.IX Item "Spacebar"
Pick up and shield.
.Sp
If the ship is above a \fBFuel Tank\fR the ship is refueled, i.e the fuel
is picked up. Two vertical bars are drawn to indicate that fuel is
picked up. When there is no more fuel left in the tank, it disappears
and 300 points are scored.
.Sp
If the ship is close to the \fBEnergy Pod\fR a tractor beam is initiated. The
Pod is picked up when the tractor beam is of the right
length. If \fIspacebar\fR is released before the correct distance is reached
the Pod is not picked up.
.Sp
When the shield is activated, a circle is drawn around the ship. If
the ship is carrying the Pod, the Pod and the wire are also
protected by the shield. The shield costs fuel to power.
.IP "\fI\s-1ESC\s0\fR/\fIQ\fR" 5
.IX Item "ESC/Q"
Quit the game
.IP "\fIP\fR" 5
.IX Item "P"
Pause
.IP "\fIC\fR" 5
.IX Item "C"
Continue a paused game
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
The .thrustrc file
.PP
Each key command can be customized. Key names are defined by \s-1SDL.\s0
.PP
Valid commands:
.IP "SDL-counterclockwise" 5
.IX Item "SDL-counterclockwise"
.PD 0
.IP "SDL-clockwise" 5
.IX Item "SDL-clockwise"
.IP "SDL-thrust" 5
.IX Item "SDL-thrust"
.IP "SDL-fire" 5
.IX Item "SDL-fire"
.IP "SDL-pickup" 5
.IX Item "SDL-pickup"
.PD
.PP
Examples:
.IP "SDL-counterclockwise    A" 5
.IX Item "SDL-counterclockwise A"
.PD 0
.IP "SDL-fire                Space" 5
.IX Item "SDL-fire Space"
.PD
.SH "FILES"
.IX Header "FILES"
\&\fIthrust.highscore\fR in the configured shared state dir.
.PP
\&\fI${\s-1HOME\s0}/.thrustrc\fR
.SH "AUTHORS"
.IX Header "AUTHORS"
Current programming by Dennis Payne \fIdulsi@identicalsoftware.com\fR
.PP
Original programming by Peter Ekberg \fIpeda@lysator.liu.se\fR.
.PP
Original man page by Joey Hess \fIjoey@kitenet.net\fR.
.PP
Thanks go out to the authors of the Thrust for the C64.
.SH "DISTRIBUTION"
.IX Header "DISTRIBUTION"
Inertia Blast may be copied under the term of the Gnu General Public Licence.
